include:
  - project: veepee/vptech/ci-cd/markdown-lint
    ref: 1-latest
    file: gitlab-ci.yml
  - project: veepee/vptech/ci-cd/semantic-release
    ref: 2-latest
    file: gitlab-ci.yml
  - project: veepee/vptech/ci-cd/shellcheck
    ref: 2-latest
    file: gitlab-ci.yml

.template: &build
  stage: build
  image: docker.registry.vptech.eu/docker:latest
  before_script:
    - apk update && apk add bash curl
    - chmod +x build.sh
    - echo "Waiting for Docker daemon to be ready..."
    - sleep 10  # Give the Docker daemon time to initialize
    - docker version || (echo "Docker not available" && exit 1)
    - docker info || (echo "Docker info failed" && exit 1)
    - echo "Testing Docker import capability..."
    - echo "FROM scratch" > /tmp/Dockerfile.test
    - echo "CMD [\"echo\", \"hello\"]" >> /tmp/Dockerfile.test
    - docker build -t test-image -f /tmp/Dockerfile.test .
    - docker save test-image > /tmp/test-image.tar
    - docker rmi test-image
    - docker import /tmp/test-image.tar test-import-image    
  artifacts:
    expire_in: 1 day
    paths:
      - image
  services:
    - name: docker.registry.vptech.eu/docker:dind
      alias: docker
      command: ["--privileged"]
  tags:
    - dind
  variables:
    DOCKER_DRIVER: overlay

.template: &deploy
  stage: deploy
  image: docker.registry.vptech.eu/docker:latest
  before_script:
    - docker login -u "$DOCKER_PUBLIC_REGISTRY_USERNAME" -p "$DOCKER_PUBLIC_REGISTRY_PASSWORD"
    - docker load -i image/alpine-v3.14.tar
    - docker load -i image/alpine-v3.15.tar
    - docker load -i image/alpine-v3.16.tar
  only:
    - main
    - master
  services:
    - name: docker.registry.vptech.eu/docker:dind
      alias: docker
  tags:
    - dind
  variables:
    DOCKER_DRIVER: overlay

stages:
  - lint
  - build
  - deploy
  - release

build:3.14:
  <<: *build
  script:
    - ./build.sh -d 3.14
    - mkdir image
    - docker save alpine:3.14 > image/alpine-v3.14.tar

build:3.15:
  <<: *build
  script:
    - ./build.sh -d 3.15
    - mkdir image
    - docker save alpine:3.15 > image/alpine-v3.15.tar

build:3.16:
  <<: *build
  script:
    - ./build.sh -d 3.16
    - mkdir image
    - docker save alpine:3.16 > image/alpine-v3.16.tar

# https://hub.docker.com/u/vptech/
vptech:
  <<: *deploy
  script:
    - docker tag alpine:3.14 vptech/alpine:3.14
    - docker tag alpine:3.15 vptech/alpine:3.15
    - docker tag alpine:3.16 vptech/alpine:3.16
    - docker tag alpine:3.16 vptech/alpine:latest
    - docker push --all-tags vptech/alpine
# EOF
