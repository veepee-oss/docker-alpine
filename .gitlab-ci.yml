include:
  - project: veepee/vptech/ci-cd/markdown-lint
    ref: 1-latest
    file: gitlab-ci.yml
  - project: veepee/vptech/ci-cd/semantic-release
    ref: 2-latest
    file: gitlab-ci.yml
  - project: veepee/vptech/ci-cd/shellcheck
    ref: 2-latest
    file: gitlab-ci.yml

.build:
  image: docker.registry.vptech.eu/docker:stable
  stage: build
  services:
    - name: docker.registry.vptech.eu/docker:dind
      alias: docker
  tags: [dind]
  artifacts:
    expire_in: 1 day
    paths:
      - image
  before_script:
    - apk update && apk add bash curl
    - chmod +x build.sh
  variables:
    DOCKER_HOST: tcp://docker:2376
  dependencies: []

.deploy:
  image: docker.registry.vptech.eu/docker:stable
  stage: deploy
  services:
    - name: docker.registry.vptech.eu/docker:dind
      alias: docker
  tags: [dind]
  before_script:
    - docker login -u "$DOCKER_PUBLIC_REGISTRY_USERNAME" -p "$DOCKER_PUBLIC_REGISTRY_PASSWORD"
  variables:
    DOCKER_HOST: tcp://docker:2376
  only:
    - main
    - master

stages:
  - lint
  - build
  - deploy
  - release

# Debug job (optional - remove if not needed)
debug-docker:
  extends: .build
  stage: build
  when: manual
  script:
    - echo "=== Network Debug ==="
    - cat /etc/resolv.conf
    - nslookup docker || echo "DNS lookup failed"
    - ping -c 3 docker || echo "Ping failed"
    - netstat -rn
    - echo "=== Docker Debug ==="
    - echo $DOCKER_HOST
    - docker version
    - docker info
  artifacts: {}

# Alpine builds
build-alpine-3.14:
  extends: .build
  script:
    - ./build.sh -d 3.14
    - mkdir -p image
    - docker save alpine:3.14 > image/alpine-v3.14.tar

build-alpine-3.15:
  extends: .build
  script:
    - ./build.sh -d 3.15
    - mkdir -p image
    - docker save alpine:3.15 > image/alpine-v3.15.tar

build-alpine-3.16:
  extends: .build
  script:
    - ./build.sh -d 3.16
    - mkdir -p image
    - docker save alpine:3.16 > image/alpine-v3.16.tar

build-alpine-3.18:
  extends: .build
  script:
    - ./build.sh -d 3.18
    - mkdir -p image
    - docker save alpine:3.18 > image/alpine-v3.18.tar

build-alpine-3.19:
  extends: .build
  script:
    - ./build.sh -d 3.19
    - mkdir -p image
    - docker save alpine:3.19 > image/alpine-v3.19.tar

build-alpine-3.20:
  extends: .build
  script:
    - ./build.sh -d 3.20
    - mkdir -p image
    - docker save alpine:3.20 > image/alpine-v3.20.tar

build-alpine-3.22:
  extends: .build
  script:
    - ./build.sh -d 3.22
    - mkdir -p image
    - docker save alpine:3.22 > image/alpine-v3.22.tar

# Deploy to Docker Hub
# https://hub.docker.com/u/vptech/
deploy-vptech:
  extends: .deploy
  script:
    - docker load -i image/alpine-v3.14.tar
    - docker load -i image/alpine-v3.15.tar
    - docker load -i image/alpine-v3.16.tar
    - docker load -i image/alpine-v3.18.tar
    - docker load -i image/alpine-v3.19.tar
    - docker load -i image/alpine-v3.20.tar
    - docker load -i image/alpine-v3.22.tar
    - docker tag alpine:3.14 vptech/alpine:3.14
    - docker tag alpine:3.15 vptech/alpine:3.15
    - docker tag alpine:3.16 vptech/alpine:3.16
    - docker tag alpine:3.18 vptech/alpine:3.18
    - docker tag alpine:3.19 vptech/alpine:3.19
    - docker tag alpine:3.20 vptech/alpine:3.20
    - docker tag alpine:3.22 vptech/alpine:3.22
    - docker push --all-tags vptech/alpine
  needs:
    - build-alpine-3.14
    - build-alpine-3.15
    - build-alpine-3.16
    - build-alpine-3.18
    - build-alpine-3.19
    - build-alpine-3.20
    - build-alpine-3.22
